#!/usr/bin/env ruby
# rubocop : disable Layout/LineLength
# rubocop : disable Metrics/BlockNesting

require_relative '../lib/player'
require_relative '../lib/tic'

def tictac
  board = Tic.new
  player_x = Player.new('', 'X')
  player_o = Player.new('', 'O')
  game_procedure
  set_players(player_x, player_o)
  9.times do |time|
    player = time.odd? ? player_x : player_o
    ask_move(player.name, board)
    player.make_move(make_input(player, board), board)
    if board.winner
      show_winner(player.name, board)
      return nil
    end
  end
  show_draw(board)
end

def game_procedure
  puts "\nWelcome to Tic Tac Toe, Please Share the Game!\n"\
  "\n 1 | 2 | 3 \n-----------\n 4 | 5 | 6 \n-----------\n 7 | 8 | 9 \n"
end
  puts ''

def set_players(player_x, player_o)
  puts "\nFirst Player name:"
  player_x.name = gets.chomp!
  puts "\nSecond Player Name:"
  player_o.name = gets.chomp!
end

def ask_move(player, board)
  puts "\nPlayer one turn #{player}!"
  puts "\nPredict a number between 1 and 9"
  puts board.current_board
end

def make_input(player, board)
  valid = false
  taken_message = 'The board position already taken, Please chose another position'
  invalid_message = 'Please enter a valid numer'
  until valid
    input = gets.chomp.to_i
    if input.between?(1, 9) && player.check_position?(input, board)
      valid = true
    else
      message = input.between?(1, 9) ? taken_message : invalid_message
      puts message
    end
  end
  input
end

def show_winner(player, board)
  puts "\nYou have won the round #{player}!!!"
  puts board.current_board
end

def show_draw(board)
  puts "\nThe game is draw!"
  puts board.current_board
  puts "\nGame Ended."
end

tictac

# rubocop : enable Layout/LineLength
# rubocop : enable Metrics/BlockNesting